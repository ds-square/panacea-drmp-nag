package org.panacea.drmp.nag.domain.graph;


import org.springframework.lang.NonNull;

import java.util.HashSet;
import java.util.Objects;
import java.util.Set;

public class NExploitRepr {

	private String source;
	private String destination;

	@NonNull
	private Set<NetworkVulnerability> vulnerabilities;

	public Set<NetworkVulnerability> getVulnerabilities() {
		return vulnerabilities;
	}

	public String getSource() {
		return source;
	}


	public String getDestination() {
		return destination;
	}

	public NExploitRepr(String source, String destination) {
		this.source = source;
		this.destination = destination;
	}


	public void addVulnerability(NetworkVulnerability vulnerability) {
		if (this.vulnerabilities == null) {
			this.vulnerabilities = new HashSet<>();
		}
		this.vulnerabilities.add(vulnerability);
	}


	@Override
	public String toString() {
		return "NExploitRepr{" +
				"source='" + source + '\'' +
				", dest='" + destination + '\'' +
				", vulnerabilities=" + vulnerabilities +
				'}';
	}



	@Override
	public boolean equals(Object o) {
		if (this == o) return true;
		if (o == null || getClass() != o.getClass()) return false;
		NExploitRepr that = (NExploitRepr) o;
		return source.equals(that.source) &&
				destination.equals(that.destination);
	}

	@Override
	public int hashCode() {
		return Objects.hash(source, destination);
	}
}
